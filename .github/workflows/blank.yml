name: Vulnerability Scanning and Docker Build

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+' # Matches branch names like v1.0, v15.3, v7.09

jobs:
  scan-vulnerabilities:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.21.0/trivy_0.21.0_Linux-64bit.tar.gz
        tar zxvf trivy_0.21.0_Linux-64bit.tar.gz
        sudo mv trivy /usr/local/bin/
        rm trivy_0.21.0_Linux-64bit.tar.gz
      shell: bash

    - name: Scan codebase for vulnerabilities
      id: vulnerabilities
      run: |
        trivy filesystem --no-progress --severity HIGH,CRITICAL --format table -o trivy_report.txt .
        if grep -q 'Total: 0' trivy_report.txt; then
          echo "No vulnerabilities found. Proceeding to Docker build..."
          echo "Dockerfile contents:"
          cat Dockerfile # You can specify the actual path to your Dockerfile
          echo "::set-output name=build_image::true"
        else
          echo "Vulnerabilities found. Skipping Docker build."
          echo "::set-output name=build_image::false"
        fi
      shell: bash

    - name: Set Docker image tag
      id: set-docker-tag
      if: steps.vulnerabilities.outputs.build_image == 'true'
      run: echo "fred/go-fortune:${GITHUB_SHA}" >> tag.txt

    - name: Docker Build and Push
      id: docker-build
      if: steps.vulnerabilities.outputs.build_image == 'true'
      run: |
        docker build -t $(cat tag.txt) .
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker push $(cat tag.txt)
      env:
        DOCKER_CLI_ASK=0

    - name: Upload Trivy report
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy_report.txt

    - name: Cleanup
      run: |
        rm tag.txt
      if: steps.vulnerabilities.outputs.build_image == 'true'
